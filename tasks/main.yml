---
- name: check for pending reboot
  win_shell: "{{ lookup('file', 'check_pending_reboot.ps1') }}"
  register: pending_reboot
  changed_when: pending_reboot.stdout_lines[0] != 'False'
  notify: reboot windows

- name: notify about playbook stop
  debug:
    msg: "playbook for {{ inventory_hostname }} will be stopped because reboot is required but not allowed"
  when: pending_reboot.changed and not windows_reboot_allowed

- name: ending playbook because reboot is not allowed
  meta: end_play
  when: pending_reboot.changed and not windows_reboot_allowed

- name: run all notified handlers
  meta: flush_handlers
